// {{$.Private}}Table is SQL table name
var {{$.Private}}Table = "{{$.Graph.Type.Table}}"

var {{$.Private}}TableProperties = map[string]runtime.TableProperties{
{{ range $_, $dialect := .Dialects -}}
    {{ $table := $dialect.Table $.Graph -}}
    "{{$dialect.Name}}": {
        Columns: map[string]string{
            {{ range $_, $col := $table.Columns -}}
            "{{ $col.Name }}": "{{ $col }}",
            {{ end -}}
        },
        ForeignKeys: map[string]string{
            {{ range $_, $fk := $table.ForeignKeys -}}
            "{{ $fk.Hash }}": "{{ $fk }}",
            {{ end -}}
        },
        PrimaryKeys: []string{
            {{ range $_, $pk := $table.PrimaryKeys -}}
            "{{ $pk }}",
            {{ end -}}
        },
    },
{{ end -}}
}

func init() {
    var v interface{} = &{{$.Graph.Type.Naked.Ext $.Graph.Type.Package}}{}

    // override tableName if the type implement the TableNamer interface
    if namer, ok := v.(runtime.TableNamer); ok {
        {{$.Private}}Table = namer.TableName()
    }
}
