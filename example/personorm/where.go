// Autogenerated by github.com/posener/orm; DO NOT EDIT
package personorm

import (
	"github.com/posener/orm/common"
)

// WhereName adds a condition on Name to the WHERE statement
func WhereName(op common.Op, val string) common.Where {
	return common.NewWhere(op, "name", val)
}

// WhereNameIn adds an IN condition on Name to the WHERE statement
func WhereNameIn(vals ...string) common.Where {
	args := make([]interface{}, len(vals))
	for i := range vals {
		args[i] = vals[i]
	}
	return common.NewWhereIn("name", args...)
}

// WhereNameBetween adds a BETWEEN condition on Name to the WHERE statement
func WhereNameBetween(low, high string) common.Where {
	return common.NewWhereBetween("name", low, high)
}

// WhereAge adds a condition on Age to the WHERE statement
func WhereAge(op common.Op, val int) common.Where {
	return common.NewWhere(op, "age", val)
}

// WhereAgeIn adds an IN condition on Age to the WHERE statement
func WhereAgeIn(vals ...int) common.Where {
	args := make([]interface{}, len(vals))
	for i := range vals {
		args[i] = vals[i]
	}
	return common.NewWhereIn("age", args...)
}

// WhereAgeBetween adds a BETWEEN condition on Age to the WHERE statement
func WhereAgeBetween(low, high int) common.Where {
	return common.NewWhereBetween("age", low, high)
}
